trigger:
- master

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: '0.11.13'            
      - task: Bash@3
        displayName: Lint
        inputs:
          targetType: 'inline'
          script: '/opt/hostedtoolcache/terraform/0.11.13/x64/terraform fmt -check=true'          
      - task: TerraformCLI@0
        displayName: Init - sandbox
        inputs:
          command: 'init'
          backendType: 'azurerm'
          backendServiceArm: 'azurerm_rpetemp_rg_creator'
          backendAzureRmResourceGroupName: 'core-infra-rpetemp'
          backendAzureRmStorageAccountName: 'rpetemptfstate'
          backendAzureRmContainerName: 'rpetemp'
          backendAzureRmKey: 'rgs/sandbox.tfstate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/sandbox'
      - task: TerraformCLI@0
        displayName: Validate - Sandbox
        inputs:
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/sandbox'

      - task: TerraformCLI@0
        displayName: Plan - Sandbox
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/sandbox'
          environmentServiceName: 'azurerm_rpetemp_rg_creator'

      - task: TerraformCLI@0
        displayName: Init - aat
        inputs:
          command: 'init'
          backendType: 'azurerm'
          backendServiceArm: 'azurerm_rpetemp_rg_creator'
          backendAzureRmResourceGroupName: 'core-infra-rpetemp'
          backendAzureRmStorageAccountName: 'rpetemptfstate'
          backendAzureRmContainerName: 'rpetemp'
          backendAzureRmKey: 'rgs/aat.tfstate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/aat'
      - task: TerraformCLI@0
        displayName: Validate - aat
        inputs:
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/aat'
      - task: TerraformCLI@0
        displayName: Plan - AAT
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/aat'
          environmentServiceName: 'azurerm_rpetemp_rg_creator'
- stage: Deploy
#  dependsOn: Build
#  condition: succeeded()
  jobs:
  - deployment: Sandbox
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'sandbox'
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: TerraformInstaller@0
              inputs:
                terraformVersion: '0.11.13'
            - task: TerraformCLI@0
              displayName: Init - sandbox
              inputs:
                command: 'init'
                backendType: 'azurerm'
                backendServiceArm: 'azurerm_rpetemp_rg_creator'
                backendAzureRmResourceGroupName: 'core-infra-rpetemp'
                backendAzureRmStorageAccountName: 'rpetemptfstate'
                backendAzureRmContainerName: 'rpetemp'
                backendAzureRmKey: 'rgs/sandbox.tfstate'
                workingDirectory: '$(System.DefaultWorkingDirectory)/sandbox'
            - task: TerraformCLI@0
              displayName: Plan - sandbox
              inputs:
                command: 'plan'
                environmentServiceName: 'azurerm_rpetemp_rg_creator'
                workingDirectory: '$(System.DefaultWorkingDirectory)/sandbox'
                commandOptions: '-out=tfplan'
  - deployment: AAT
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'aat'
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: TerraformInstaller@0
              inputs:
                terraformVersion: '0.11.13'
            - task: TerraformCLI@0
              displayName: Init - aat
              inputs:
                command: 'init'
                backendType: 'azurerm'
                backendServiceArm: 'azurerm_rpetemp_rg_creator'
                backendAzureRmResourceGroupName: 'core-infra-rpetemp'
                backendAzureRmStorageAccountName: 'rpetemptfstate'
                backendAzureRmContainerName: 'rpetemp'
                backendAzureRmKey: 'rgs/aat.tfstate'
                workingDirectory: '$(System.DefaultWorkingDirectory)/aat'
            - task: TerraformCLI@0
              displayName: Plan - aat
              inputs:
                command: 'plan'
                environmentServiceName: 'azurerm_rpetemp_rg_creator'
                workingDirectory: '$(System.DefaultWorkingDirectory)/aat'
                commandOptions: '-out=tfplan'